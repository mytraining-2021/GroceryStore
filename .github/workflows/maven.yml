name: Build, Push to ACR, and Deploy to AKS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Build with Maven
        run: mvn clean install

      - name: Verify target directory
        run: ls -la target

      - name: Log in to Azure Container Registry
        run: echo "${{ secrets.AZURE_ACR_PASSWORD }}" | docker login ${{ secrets.AZURE_ACR_NAME }}.azurecr.io -u ${{ secrets.AZURE_ACR_USERNAME }} --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.AZURE_ACR_NAME }}.azurecr.io/grocerystore:latest .
          docker push ${{ secrets.AZURE_ACR_NAME }}.azurecr.io/grocerystore:latest

      - name: Logout from Azure Container Registry
        run: docker logout ${{ secrets.AZURE_ACR_NAME }}.azurecr.io

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v1

      - name: Create .kube directory
        run: mkdir -p $HOME/.kube

      - name: Create kubeconfig
        run: echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.5.4

      - name: Add Helm Repositories
        run: |
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update

      - name: Deploy Loki
        run: |
          helm upgrade --install loki grafana/loki-stack --namespace logging --create-namespace

      - name: Deploy Grafana
        run: |
          helm upgrade --install grafana grafana/grafana --namespace monitoring --set adminPassword='admin' --set service.type=LoadBalancer

      - name: Deploy GroceryStore Application
        run: |
          helm upgrade --install grocerystore ./helm/GroceryStore --namespace default --set image.repository=${{ secrets.AZURE_ACR_NAME }}.azurecr.io/grocerystore --set image.tag=latest --set env.APPLICATIONINSIGHTS_CONNECTION_STRING="InstrumentationKey=${{ secrets.APPLICATIONINSIGHTS_CONNECTION_STRING }}"
